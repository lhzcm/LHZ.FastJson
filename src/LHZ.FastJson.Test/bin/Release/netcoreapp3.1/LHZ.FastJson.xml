<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LHZ.FastJson</name>
    </assembly>
    <members>
        <member name="T:LHZ.FastJson.Interface.IJsonObject">
            <summary>
            Json对象类
            </summary>
        </member>
        <member name="P:LHZ.FastJson.Interface.IJsonObject.Type">
            <summary>
            Json对象类型
            </summary>
        </member>
        <member name="P:LHZ.FastJson.Interface.IJsonObject.Value">
            <summary>
            Json对象值
            </summary>
        </member>
        <member name="M:LHZ.FastJson.Interface.IJsonObject.ToJsonString">
            <summary>
            把Json对象转化成Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonArray">
            <summary>
            Json数组对象
            </summary>
        </member>
        <member name="M:LHZ.FastJson.JsonClass.JsonArray.AddJsonObject(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            像数组里添加Json对象
            </summary>
            <param name="obj">Json对象</param>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonBoolean">
            <summary>
            Json布尔对象
            </summary>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonBoolean.BooleanType">
            <summary>
            bool类型（true or false）
            </summary>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonContent">
            <summary>
            Json容器对象
            </summary>
        </member>
        <member name="M:LHZ.FastJson.JsonClass.JsonContent.AddJsonAttr(System.String,LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            向Json容器里添加Json对象属性
            </summary>
            <param name="obj">Json对象</param>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonNull">
            <summary>
            Json空对象
            </summary>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonNumber">
            <summary>
            Json数字对象
            </summary>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonNumber.NumberType">
            <summary>
            数字类型
            </summary>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonObject">
            <summary>
            Json对象类
            </summary>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonObject.Type">
            <summary>
            Json对象类型
            </summary>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonObject.Item(System.String)">
            <summary>
            通过字符串索引获取对象
            </summary>
            <param name="index">字符串索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonObject.Item(System.Int32)">
            <summary>
            通过下标索引获取对象
            </summary>
            <param name="index">下标串索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonObject.Value">
            <summary>
            Json对象值
            </summary>
        </member>
        <member name="P:LHZ.FastJson.JsonClass.JsonObject.Position">
             <summary>
            字符串位置
             </summary>
        </member>
        <member name="T:LHZ.FastJson.JsonClass.JsonString">
            <summary>
            Json字符串类型
            </summary>
        </member>
        <member name="T:LHZ.FastJson.JsonConvert">
            <summary>
            Json对象解析转换静态类型
            可以对Json String序列化成object
            可以对object反序列化成Json String
            </summary>
        </member>
        <member name="M:LHZ.FastJson.JsonConvert.Deserialize(System.String)">
            <summary>
            Json字符串反序列化成JsonObject类型
            </summary>
            <param name="jsonString">Json字符串</param>
            <returns>JsonObject类型对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonConvert.Deserialize``1(System.String)">
            <summary>
            Json字符串反序列化成T类型
            </summary>
            <typeparam name="T">反序列化目标类型</typeparam>
            <param name="jsonString">JsonObject类型</param>
            <returns>反序列化目标对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonConvert.Serialize(System.Object)">
            <summary>
            把对象进行序列化成Json字符串
            </summary>
            <param name="obj">需要序列化的对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonConvert.Serialize(System.Object,LHZ.FastJson.Json.Format.IJsonFormat[])">
            <summary>
            把对象进行序列化成Json字符串（带格式化）
            </summary>
            <param name="obj">需要序列化的对象</param>
            <param name="formats">格式化类型</param>
            <returns>Json字符串</returns>
        </member>
        <member name="T:LHZ.FastJson.JsonReader">
            <summary>
            Json字符串解析类
            </summary>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonObject(System.Int32@)">
            <summary>
            解析Json对象
            </summary>
            <param name="index">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.StringToCharArray(System.String)">
            <summary>
            把string转化为字符数组
            </summary>
            <param name="jsonStr">json字符串</param>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.SkipBlank(System.Int32)">
            <summary>
            跳过空白字符
            </summary>
            <param name="index">当前解析字符索引</param>
            <returns>跳过空白字符后的索引</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetAttrName(System.Int32@)">
            <summary>
            解析Json属性名称
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>属性名称</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonString(System.Int32@)">
            <summary>
            解析Json String对象
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonNumber(System.Int32@)">
            <summary>
            解析Json Number对象
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonBoolean(System.Int32@)">
            <summary>
            解析Json Boolean对象
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonNull(System.Int32@)">
            <summary>
            解析Json Null
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonContent(System.Int32@)">
            <summary>
            解析Json Content对象
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="M:LHZ.FastJson.JsonReader.GetJsonArray(System.Int32@)">
            <summary>
            解析Json Array对象
            </summary>
            <param name="startIndex">当前解析字符索引</param>
            <returns>Json对象</returns>
        </member>
        <member name="T:LHZ.FastJson.Json.Format.DateTimeJsonFormat">
            <summary>
            日期格式化类
            </summary>
        </member>
        <member name="P:LHZ.FastJson.Json.Format.DateTimeJsonFormat.Type">
            <summary>
            格式化类型
            </summary>
        </member>
        <member name="P:LHZ.FastJson.Json.Format.DateTimeJsonFormat.FormatString">
            <summary>
            格式化字符串如（yyyy-MM-dd）
            </summary>
        </member>
        <member name="T:LHZ.FastJson.Json.Format.JsonFormatter">
            <summary>
            格式化类
            </summary>
        </member>
        <member name="M:LHZ.FastJson.Json.Format.JsonFormatter.DateTimeFormat(System.DateTime)">
            <summary>
            DateTime类型格式化转化
            </summary>
            <param name="dateTime">日期时间对象</param>
            <returns>格式化日期时间字符串</returns>
        </member>
        <member name="T:LHZ.FastJson.Json.JsonDeserializer`1">
            <summary>
            反序列化类
            </summary>
            <typeparam name="T">需要进行反序列化的类</typeparam>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.Deserialize">
            <summary>
            进行反序列化
            </summary>
            <returns>返回反序列化类型对象</returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.SwitchDeserializationMethod(System.Type,LHZ.FastJson.JsonClass.JsonObject,System.Collections.Generic.List{System.Reflection.PropertyInfo})">
            <summary>
            对反序列化类型进行对应的反序列化操作
            </summary>
            <param name="type">反序列化对象类型</param>
            <param name="jsonObject">Json对象类型</param>
            <param name="propertyInfos">反序列属性列表</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.GetObjectType(System.Type)">
            <summary>
            获取对象的类型
            </summary>
            <param name="type">反序列化对象类型</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToBoolean(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成bool类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToInt(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成int类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToLong(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成long类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToFloat(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成单精度浮点类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToDouble(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成双精度浮点类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToDecimal(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成数字类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToDateTime(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成时间类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToEnum(System.Type,LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成枚举
            </summary>
            <param name="type"></param>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToString(LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成字符类型
            </summary>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToDictionary(System.Type,LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成字典类型
            </summary>
            <param name="type">类型</param>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToArray(System.Type,LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成数组
            </summary>
            <param name="type">数组对象类型</param>
            <param name="jsonObject">Json类型</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToList(System.Type,LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成列表集合
            </summary>
            <param name="type">列表集合对象类型</param>
            <param name="jsonObject">Json类型</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.ConvertToObject(System.Type,System.Collections.Generic.List{System.Reflection.PropertyInfo},LHZ.FastJson.JsonClass.JsonObject)">
            <summary>
            解析成对象
            </summary>
            <param name="type">对象类型</param>
            <param name="properties">对象属性列表</param>
            <param name="jsonObject">Json对象</param>
            <returns></returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonDeserializer`1.GetPropertyInfos(System.Type)">
            <summary>
            从缓存中读取类型的可写属性列表
            </summary>
            <param name="type">类型</param>
            <returns>可写属性列表</returns>
        </member>
        <member name="T:LHZ.FastJson.Json.JsonSerializer">
            <summary>
            Json序列化类
            </summary>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.Serialize">
            <summary>
            序列化方法
            </summary>
            <returns>Json字符串</returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SwitchSerializationMethod(System.Object)">
            <summary>
            对序列化类型进行对应的序列化操作
            </summary>
            <param name="type">序列化对象类型</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.GetObjectType(System.Type)">
            <summary>
            获取对象的类型
            </summary>
            <param name="type">序列化对象类型</param>
            <returns>对象类型</returns>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeBoolean(System.Object)">
            <summary>
            bool类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeInt(System.Object)">
            <summary>
            int类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeLong(System.Object)">
            <summary>
            long类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeDouble(System.Object)">
            <summary>
            double类型序列
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeDateTime(System.Object)">
            <summary>
            DateTime类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeEnum(System.Object)">
            <summary>
            Enum类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeString(System.Object)">
            <summary>
            String类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeDictionary(System.Object)">
            <summary>
            Dictionary类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeEnumerable(System.Object)">
            <summary>
            Enumerable类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.SerializeObject(System.Object)">
            <summary>
            object类型序列化
            </summary>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:LHZ.FastJson.Json.JsonSerializer.CharParaphrase(System.Char)">
            <summary>
            字符转义
            </summary>
            <param name="paraphrase">需要转义的字符</param>
            <returns>转义好的字符串</returns>
        </member>
    </members>
</doc>
